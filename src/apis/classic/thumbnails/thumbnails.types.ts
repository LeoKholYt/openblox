import type { Identifier, ObjectPrettify, ObjectPrettifyDeep, UnionPrettify, Url } from "typeforge"

export type ThumbnailFormat = "Png" | "WebP"

export type ThumbnailReturnPolicy = "PlaceHolder" | "AutoGenerated" | "ForceAutoGenerated"

type ThumbnailVersion = UnionPrettify<"TN2" | "TN3">

export type ThumbnailData<TargetId extends Identifier | undefined = undefined> = ObjectPrettify<(
  (TargetId extends undefined ? {} : { targetId: TargetId })
  & {
    state:  "Completed" | "Pending" | "Error",
    imageUrl: Url,
    version: ThumbnailVersion
  }
)>

// [ ASSETS ] ////////////////////////////////////////////////////////////////////////////////////////////////////////
// GET /v1/assets
export type AssetSize = "30x30"|"42x42"|"50x50"|"60x62"|"75x75"|"110x110"|"140x140"|"150x150"|"160x100"|"160x600"|"250x250"|"256x144"|"300x250"|"304x166"|"384x216"|"396x216"|"420x420"|"480x270"|"512x512"|"576x324"|"700x700"|"728x90"|"768x432"|"1200x80"
export type RawAssetsThumbnailsData<AssetId extends Identifier> = ObjectPrettify<{
  data: ThumbnailData<AssetId>[]
}>
export type PrettifiedAssetsThumbnailsData<AssetId extends Identifier> = ObjectPrettify<{
  [Key in AssetId]: ThumbnailData
}>

// GET /v1/asset-thumbnail-animated
export type AssetAnimatedThumbnailData<AssetId extends Identifier> = ObjectPrettify<{
  targetId: AssetId,
  state: "Completed" | "Pending" | "Error",
  imageUrl: string,
  version: ThumbnailVersion
}>
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// [ BADGES ] ////////////////////////////////////////////////////////////////////////////////////////////////////////
// GET /v1/badges/icons
export type RawBadgesThumbnailsData<BadgeId extends Identifier> = ObjectPrettify<{
  data: ThumbnailData<BadgeId>[]
}>
export type PrettifiedBadgesThumbnailsData<BadgeId extends Identifier> = ObjectPrettify<{
  [Key in BadgeId]: ThumbnailData
}>
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// [ BUNDLES ] ///////////////////////////////////////////////////////////////////////////////////////////////////////
export type BundleSize = "150x150"|"420x420"

// GET /v1/bundles/thumbnails
export type RawBundlesThumbnailsData<BundleId extends Identifier> = ObjectPrettify<{
  data: ThumbnailData<BundleId>[]
}>
export type PrettifiedBundlesThumbnailsData<BundleId extends Identifier> = ObjectPrettify<{
  [Key in BundleId]: ThumbnailData
}>
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// [ DEVELOPER PRODUCTS ] ////////////////////////////////////////////////////////////////////////////////////////////
export type DeveloperProductSize = "150x150"|"420x420"

// GET /v1/developer-products/icons
export type RawDeveloperProductsThumbnails<DeveloperProductId extends Identifier> = ObjectPrettify<{
  data: ThumbnailData<DeveloperProductId>[]
}>
export type PrettifiedDeveloperProductsThumbnails<DeveloperProductId extends Identifier> = ObjectPrettify<{
  [Key in DeveloperProductId]: ThumbnailData
}>
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// [ GAME PASSES ] ///////////////////////////////////////////////////////////////////////////////////////////////////
// GET /v1/game-passes
export type RawGamePassesThumbnailsData<GamePassId extends Identifier> = ObjectPrettify<{
  data: ThumbnailData<GamePassId>[]
}>
export type PrettifiedGamePassesThumbnailsData<GamepassId extends Identifier> = ObjectPrettify<{
  [Key in GamepassId]: ThumbnailData
}>
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// [ GAMES ] /////////////////////////////////////////////////////////////////////////////////////////////////////////
export type GameThumbnailSize = "256x144" | "384x216" | "480x270" | "576x324" | "768x432"

// GET /v1/games/{universeId}/thumbnails
export type RawGameThumbnailsFromIdsData<ThumbnailId extends Identifier> = ObjectPrettify<{
  data: ThumbnailData<ThumbnailId>[]
}>
export type PrettifiedGameThumbnailsFromIdsData<ThumbnailId extends Identifier> = ObjectPrettify<{
  [Key in ThumbnailId]: ThumbnailData
}>


// GET /v1/games/multiget/thumbnails ---------------------------------------------------------------------------------
type GamesThumbnailsData = ObjectPrettify<{
  error: null,
  thumbnails: {
    targetId: number,
    state:  "Completed" | "Pending" | "Error",
    imageUrl: Url,
    version: ThumbnailVersion
  }[]
} | {
  error: {
    code: number,
    message: string,
    userFacingMessage: string,
    field: string,
    fieldData: string
  },
  thumbnails: null
}>


export type RawGamesThumbnailsData<UniverseId extends Identifier> = ObjectPrettifyDeep<{
  data: ({ universeId: UniverseId } & GamesThumbnailsData)[]
}>

export type PrettifiedGamesThumbnailsData<UniverseId extends Identifier> = ObjectPrettifyDeep<{
  [Key in UniverseId]: GamesThumbnailsData
}>
// -------------------------------------------------------------------------------------------------------------------


// GET /v1/games/icons -----------------------------------------------------------------------------------------------
export type GamesIconSize = "50x50" | "128x128" | "150x150" | "256x256" | "512x512"

export type RawGamesIconsData<UniverseId extends Identifier> = ObjectPrettify<{
  data: {
    targetId: UniverseId,
    state:  "Completed" | "Pending" | "Error",
    imageUrl: string,
    version: ThumbnailVersion
  }[]
}>
export type PrettifiedGamesIconsData<UniverseId extends Identifier> = ObjectPrettify<{
  [Key in UniverseId]: {
    state: "Completed" | "Pending" | "Error",
    imageUrl: Url,
    version: ThumbnailVersion
  }
}>
// -------------------------------------------------------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



// [ Group Emblem ] //////////////////////////////////////////////////////////////////////////////////////////////////
// /v1/groups/icons
export type GroupEmblemSize = "150x150"|"420x420"
export type RawGroupsEmblemsData<GroupId extends Identifier> = ObjectPrettify<{
  data: ThumbnailData<GroupId>[]
}>
export type PrettifiedGroupsEmblemsData<GroupId extends Identifier> = ObjectPrettify<{
  [Key in GroupId]: ThumbnailData
}>
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////