import { Identifier, IdentifierToNumber, ObjectPrettify, ObjectValues, PrettifyKeyof, PrettifyUnion, ToNumber, UnionToArray } from "../../../utils/utils.types"

export type ThumbnailFormat = "Png"|"Jpeg"
export type ThumbnailReturnPolicy = "PlaceHolder"|"AutoGenerated"|"ForceAutoGenerated"


// [ ASSETS ] ////////////////////////////////////////////////////////////////////////////////////////////////////////
// GET /v1/assets
export type AssetSize = "30x30"|"42x42"|"50x50"|"60x62"|"75x75"|"110x110"|"140x140"|"150x150"|"160x100"|"160x600"|"250x250"|"256x144"|"300x250"|"304x166"|"384x216"|"396x216"|"420x420"|"480x270"|"512x512"|"576x324"|"700x700"|"728x90"|"768x432"|"1200x80"
export type AssetsData = PrettifyKeyof<{
  data: {
    targetId: number,
    state: "Completed" | "Pending" | "Error",
    imageUrl: string
  }[]
}>
export type FormattedAssetsData<AssetId extends Identifier> = PrettifyKeyof<{
  [Key in AssetId]: {
    state: "Completed" | "Pending" | "Error",
    imageUrl: string
  }
}>

// GET /v1/assets-thumbnail-3d
export type Asset3dData<AssetId extends Identifier> = PrettifyKeyof<{
  targetId: IdentifierToNumber<AssetId>,
  state: "Completed" | "Pending" | "Error",
  imageUrl: string
}>

// GET /v1/asset-thumbnail-animated
export type AssetAnimatedData<AssetId extends Identifier> = PrettifyKeyof<{
  targetId: IdentifierToNumber<AssetId>,
  state: "Completed" | "Pending" | "Error",
  imageUrl: string
}>
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// [ BADGES ] ////////////////////////////////////////////////////////////////////////////////////////////////////////
// GET /v1/badges/icons
export type BadgesData = PrettifyKeyof<{
  data: {
    targetId: number,
    state:  "Completed" | "Pending" | "Error",
    imageUrl: string
  }[]
}>
export type FormattedBadgesData<BadgeId extends Identifier> = PrettifyKeyof<{
  [Key in BadgeId]: {
    state: "Completed" | "Pending" | "Error",
    imageUrl: string
  }
}>
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// [ BUNDLES ] ///////////////////////////////////////////////////////////////////////////////////////////////////////
export type BundleSize = "150x150"|"420x420"

// GET /v1/bundles/thumbnails
export type BundlesData = PrettifyKeyof<{
  data: {
    targetId: number,
    state:  "Completed" | "Pending" | "Error",
    imageUrl: string
  }[]
}>
export type FormattedBundlesData<BundleId extends Identifier> = PrettifyKeyof<{
  [Key in BundleId]: {
    state: "Completed" | "Pending" | "Error",
    imageUrl: string
  }
}>
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// [ DEVELOPER PRODUCTS ] ////////////////////////////////////////////////////////////////////////////////////////////
export type DeveloperProductSize = "150x150"|"420x420"

// GET /v1/developer-products/icons
export type DeveloperProductsData = PrettifyKeyof<{
  data: {
    targetId: number,
    state:  "Completed" | "Pending" | "Error",
    imageUrl: string
  }[]
}>
export type FormattedDeveloperProductsData<DeveloperProductId extends Identifier> = PrettifyKeyof<{
  [Key in DeveloperProductId]: {
    state: "Completed" | "Pending" | "Error",
    imageUrl: string
  }
}>
  
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// [ GAME PASSES ] ///////////////////////////////////////////////////////////////////////////////////////////////////
// GET /v1/game-passes
export type GamePassesData = PrettifyKeyof<{
  data: {
    targetId: number,
    state:  "Completed" | "Pending" | "Error",
    imageUrl: string
  }[]
}>
export type FormattedGamePassesData<GamepassId extends Identifier> = PrettifyKeyof<{
  [Key in GamepassId]: {
    state: "Completed" | "Pending" | "Error",
    imageUrl: string
  }
}>
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// [ GAMES ] /////////////////////////////////////////////////////////////////////////////////////////////////////////
export type GameThumbnailSize = "256x144" | "384x216" | "480x270" | "576x324" | "768x432"

// GET /v1/games/{universeId}/thumbnails
export type RawGameThumbnailsFromIdsData = PrettifyKeyof<{
  data: {
    targetId: number,
    state:  "Completed" | "Pending" | "Error",
    imageUrl: string
  }[]
}>
export type FormattedGameThumbnailsFromIdsData<GameThumbnailId extends Identifier> = PrettifyKeyof<{
  [Key in GameThumbnailId]: {
    state: "Completed" | "Pending" | "Error",
    imageUrl: string
  }
}>

// GET /v1/games/icons
export type GamesIconSize = "50x50" | "128x128" | "150x150" | "256x256" | "512x512"
export type GamesIconsData = PrettifyKeyof<{
  data: {
    targetId: number,
    state:  "Completed" | "Pending" | "Error",
    imageUrl: string
  }[]
}>
export type FormattedGamesIconsData<UniverseId extends Identifier> = PrettifyKeyof<{
  [Key in UniverseId]: {
    state: "Completed" | "Pending" | "Error",
    imageUrl: string
  }
}>

// GET /v1/games/multiget/thumbnails
export type GamesData = PrettifyKeyof<{
  data: {
    universeId: number,
    error: unknown,
    thumbnails: {
      targetId: number,
      state:  "Completed" | "Pending" | "Error",
      imageUrl: string
    }[]
  }[]
}>
export type FormattedGamesData<UniverseId extends Identifier> = PrettifyKeyof<{
  [Key in UniverseId]: {
    error: unknown,
    thumbnails: {
      targetId: number,
      state: "Completed" | "Pending" | "Error",
      imageUrl: string
    }[]
  }
}>
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// [ GROUP EMBLEM ] //////////////////////////////////////////////////////////////////////////////////////////////////
// /v1/groups/icons
export type GroupEmblemSize = "150x150"|"420x420"
export type GroupsEmblemsData = PrettifyKeyof<{
  data: {
    targetId: number,
    state: "Completed" | "Pending" | "Error",
    imageUrl: string
  }[]
}>
export type FormattedGroupsEmblemsData<GroupId extends Identifier> = PrettifyKeyof<{
  [Key in GroupId]: {
    state: "Completed" | "Pending" | "Error",
    imageUrl: string
  }
}>
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// [ METADATA ] //////////////////////////////////////////////////////////////////////////////////////////////////////
// /v1/metadata
export type MetadataData = PrettifyKeyof<{
  isWebappUseCacheEnabled: boolean,
  webappCacheExpirationTimspan: string
}>
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// [ PLACES ] ////////////////////////////////////////////////////////////////////////////////////////////////////////
// /v1/places/gameicons
export type PlaceThumbnailSize = "50x50"|"128x128"|"150x150"|"256x256"|"512x512"
export type PlacesIconsData = PrettifyKeyof<{
  data: {
    targetId: number,
    state: "Completed" | "Pending" | "Error",
    imageUrl: string
  }[]
}>
export type FormattedPlacesIconsData<PlaceId extends Identifier> = PrettifyKeyof<{
  [Key in PlaceId]: {
    state: "Completed" | "Pending" | "Error",
    imageUrl: string
  }
}>
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// [ AVATAR ] ////////////////////////////////////////////////////////////////////////////////////////////////////////
// GET /v1/users/avatar
export type AvatarFullSize = "30x30"|"48x48"|"60x60"|"75x75"|"100x100"|"110x110"|"140x140"|"150x150"|"180x180"|"250x250"|"352x352"|"420x420"|"720x720"
export type AvatarsFullData = PrettifyKeyof<{
  data: {
    targetId: number,
    state: "Completed" | "Pending" | "Error",
    imageUrl: string
  }[]
}>
export type FormattedAvatarsFullData<UserId extends Identifier> = PrettifyKeyof<{
  [Key in UserId]: {
    state: "Completed" | "Pending" | "Error",
    imageUrl: string
  }
}>

// GET /v1/users/avatar-3d
export type Avatar3dData<UserId extends Identifier> = PrettifyKeyof<{
  targetId: UserId
  state: "Completed" | "Pending" | "Error",
  imageUrl: string
}>

// GET /v1/users/avatar-bust
export type AvatarBustSize = "48x48"|"50x50"|"60x60"|"75x75"|"100x100"|"150x150"|"180x180"|"352x352"|"420x420"
export type AvatarsBustsData = PrettifyKeyof<{
  data: {
    targetId: number,
    state: "Completed" | "Pending" | "Error",
    imageUrl: string
  }[]
}>
export type FormattedAvatarsBustsData<UserId extends Identifier> = PrettifyKeyof<{
  [Key in UserId]: {
    state: "Completed" | "Pending" | "Error",
    imageUrl: string
  }
}>

// GET /v1/users/avatar-headshot
export type AvatarHeadshotSize = "48x48"|"50x50"|"60x60"|"75x75"|"100x100"|"110x110"|"150x150"|"180x180"|"352x352"|"420x420"|"720x720"
export type AvatarsHeadshotsData = PrettifyKeyof<{
  data: {
    targetId: number,
    state: "Completed" | "Pending" | "Error",
    imageUrl: string
  }[]
}>
export type FormattedAvatarsHeadshotsData<UserId extends Identifier> = PrettifyKeyof<{
  [Key in UserId]: {
    state: "Completed" | "Pending" | "Error",
    imageUrl: string
  }
}>
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// [ OUTFITS ] ///////////////////////////////////////////////////////////////////////////////////////////////////////
// GET /v1/users/outfit-3d
export type Outfit3dData<OutfitId extends Identifier> = PrettifyKeyof<{
  targetId: OutfitId,
  state: "Completed" | "Pending" | "Error",
  imageUrl: string
}>

// GET /v1/users/outfits
export type OutfitSize = "150x150"|"420x420"
export type OutfitsData = PrettifyKeyof<{
  data: {
    targetId: number,
    state: "Completed" | "Pending" | "Error",
    imageUrl: string
  }[]
}>
export type FormattedOutfitsData<OutfitId extends Identifier> = PrettifyKeyof<{
  [Key in OutfitId]: {
    state: "Completed" | "Pending" | "Error",
    imageUrl: string
  }
}>
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// [ BATCH ] /////////////////////////////////////////////////////////////////////////////////////////////////////////
export type BatchType = "Avatar"|"AvatarHeadShot"|"GameIcon"|"BadgeIcon"|"GameThumbnail"|"GamePass"|"Asset"|"BundleThumbnail"|"Outfit"|"GroupIcon"|"DeveloperProduct"|"AutoGeneratedAsset"|"AvatarBust"|"PlaceIcon"|"AutoGeneratedGameIcon"|"ForceAutoGeneratedGameIcon"

type BatchSizes = PrettifyKeyof<{
  "Avatar": AvatarFullSize,
  "AvatarHeadShot": AvatarHeadshotSize,
  "AvatarBust": AvatarBustSize
}>
type BatchRequestBase<Type, Size = `${number}x${number}`> = PrettifyKeyof<{
  requestId?: string,
  targetId: Identifier,
  token?: string,
  alias?: string,
  type: Type,
  size: PrettifyUnion<Size>,
  format: string,
  isCircular: boolean
}>

export type BatchRequest = PrettifyKeyof<ObjectValues<{
  /* @ts-expect-error */
  [Key in BatchType]: BatchRequestBase<Key, BatchSizes[Key]>
}>>

export type BatchResponseElement<RequestId extends string|null = null> = PrettifyKeyof<{
  requestId: NonNullable<RequestId> extends string|null ? RequestId : string|null,
  errorCode: number,
  errorMessage: string,
  targetId: number,
  state: "Completed" | "Pending" | "Error",
  imageUrl?: string,
  version?: string
}>

// POST /v1/batch
export type BatchData = PrettifyKeyof<{
  data: BatchResponseElement[]
}>

export type FormattedBatchData<
  BReq extends BatchRequest,

  BReqArr extends any[] = UnionToArray<BReq>
> = ObjectPrettify<{
  [ TypeKey in BReq["type"]]: {
    // @ts-ignore | I can index `BReqArr[BReqKey]` with `type`.
    [ BReqKey in keyof BReqArr as BReqArr[BReqKey]["type"] extends TypeKey ? BReqArr[BReqKey]["targetId"] : never ]: (
      Omit<BReqArr[BReqKey], "targetId"|"type">
    )
  }
}>
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/*Record<
    BReq["type"],
    Record<
      BReq["targetId"],
      PrettifyKeyof<Omit<BatchResponseElement<BReq["requestId"]>, "targetId">>
    >
  >*/